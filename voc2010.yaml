# Ultralytics YOLO üöÄ, AGPL-3.0 license
# PASCAL VOC 2010 dataset http://host.robots.ox.ac.uk/pascal/VOC/voc2010/ by University of Oxford
# Documentation: https://docs.ultralytics.com/datasets/detect/voc/
# Example usage: yolo train data=VOC2010.yaml

# Directory structure
# parent
# ‚îú‚îÄ‚îÄ ultralytics
# ‚îî‚îÄ‚îÄ datasets
#     ‚îî‚îÄ‚îÄ VOC2010  ‚Üê downloads here

# Train/val/test sets as 1) dir: path/to/imgs, 2) file: path/to/imgs.txt, or 3) list: [path/to/imgs1, path/to/imgs2, ..]
path: ../datasets/VOC2010
train: # train images (relative to 'path')
  - images/train
val: # val images (relative to 'path')
  - images/val
test: # test images (optional)
  - images/test

# Classes
names:
  0: aeroplane
  1: bicycle
  2: bird
  3: boat
  4: bottle
  5: bus
  6: car
  7: cat
  8: chair
  9: cow
  10: diningtable
  11: dog
  12: horse
  13: motorbike
  14: person
  15: pottedplant
  16: sheep
  17: sofa
  18: train
  19: tvmonitor

# Download script/URL (optional)
download: |
  import xml.etree.ElementTree as ET
  from tqdm import tqdm
  from ultralytics.utils.downloads import download
  from pathlib import Path

  # Define conversion function
  def convert_label(path, lb_path, image_id):
      # Conversion logic here...

  # Download URLs for VOC 2010
  dir = Path(yaml['path'])  # dataset root dir
  url = 'http://host.robots.ox.ac.uk/pascal/VOC/voc2010/'
  urls = [f'{url}VOCtrainval_03-May-2010.tar',  # Training/Validation data
          f'{url}VOCtest_03-May-2010.tar']  # Test data
  download(urls, dir=dir / 'images', curl=True, threads=3, exist_ok=True)  # download and unzip

  # Convert
  path = dir / 'images/VOCdevkit/VOC2010'
  for image_set in ['train', 'val', 'test']:
      imgs_path = dir / 'images' / image_set
      lbs_path = dir / 'labels' / image_set
      imgs_path.mkdir(exist_ok=True, parents=True)
      lbs_path.mkdir(exist_ok=True, parents=True)

      with open(path / f'ImageSets/Main/{image_set}.txt') as f:
          image_ids = f.read().strip().split()
      for id in tqdm(image_ids, desc=f'{image_set}'):
          lb_path = (lbs_path / f'{id}.jpg').with_suffix('.txt')
          convert_label(path, lb_path, id)  # convert labels to YOLO format
